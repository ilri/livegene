security:
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        fos_userbundle:
            id: fos_user.user_provider.username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        admin:
            pattern:            /admin(.*)
            context:            user
            provider:           fos_userbundle 
            form_login:
                login_path:     sonata_user_admin_security_login
                use_forward:    false
                check_path:     sonata_user_admin_security_check
                failure_path:   sonata_user_admin_security_login
                always_use_default_target_path: true
                default_target_path: sonata_admin_dashboard
            logout:
                path:           sonata_user_admin_security_logout
                target:         sonata_user_admin_security_login
            anonymous:          true
            switch_user:        true
        api:
            pattern: ^/api/
            stateless: true
            anonymous: true
            provider: fos_userbundle
            guard:
                authenticators:
                    - lexik_jwt_authentication.jwt_token_authenticator
        main:
            #pattern: ^/
            #context: user
            #http_basic: ~
            provider: fos_userbundle
            anonymous: true
            json_login:
                check_path: /authentication_token
                username_path: username
                password_path: password
                success_handler: lexik_jwt_authentication.handler.authentication_success
                failure_handler: lexik_jwt_authentication.handler.authentication_failure

    role_hierarchy:
        ROLE_API_USER:
            ROLE_SPA_USER
        ROLE_SONATA_ADMIN:
            - ROLE_USER
            - ROLE_SONATA_USER_ADMIN_USER_VIEW
            - ROLE_SONATA_USER_ADMIN_USER_EDIT
        ROLE_ADMIN:
            - ROLE_SONATA_ADMIN
        ROLE_SUPER_ADMIN:
            - ROLE_API_USER
            - ROLE_ADMIN
            - ROLE_ALLOWED_TO_SWITCH
        SONATA:
            - ROLE_SONATA_PAGE_ADMIN_PAGE_EDIT

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    access_control:
        # - { path: ^/admin, roles: ROLE_ADMIN }
        # - { path: ^/profile, roles: ROLE_USER }

        # Admin login page needs to be accessed without credential
        - { path: ^/admin/login$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/logout$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/login_check$, roles: IS_AUTHENTICATED_ANONYMOUSLY }
        - { path: ^/admin/resetting, roles: IS_AUTHENTICATED_ANONYMOUSLY }

        # Secured part of the site
        # This config requires being logged for the whole site and having the admin role for the admin part.
        # Change these rules to adapt them to your needs
        - { path: ^/admin/, roles: ROLE_SONATA_ADMIN}
        - { path: ^/media/, roles: ROLE_USER }
        - { path: ^/api/, roles: ROLE_SPA_USER }
        - { path: ^/.*, roles: IS_AUTHENTICATED_ANONYMOUSLY, ip: 127.0.0.1, requires_channel: http }
        - { path: ^/.*, roles: IS_AUTHENTICATED_ANONYMOUSLY, requires_channel: https }

    encoders:
        FOS\UserBundle\Model\UserInterface: sha512

    access_decision_manager:
        strategy: unanimous
